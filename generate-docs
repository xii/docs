#!/usr/bin/env bash

PYTHON=$(which python2)
SELF=$(dirname $(realpath $0))
XII_REPO="https://github.com/xii/xii"


# builder --------------------------------------------------------------------

function builder()
{
  ./builder.py --source $1 --output $2
}

# i/o related ----------------------------------------------------------------

function say() {
  echo "$1"
}

function fail() {
  echo "[error]: $1"
  exit 1
}

function copy() {
  local source=$1
  local dest=$2

  say "${source} -> ${dest}..."
  cp -r ${source} ${dest}
  # if ! cp -r ${source} ${dest} > /dev/null 2>&1; then
  #   fail "Could not copy ${source} -> ${dest}!"
  # fi
}


# git ------------------------------------------------------------------------

function git_clone() {
  local workdir=$1
  local repo=$2

  if [ ! -d ${workdir} ]; then
    fail "Missing workdir: ${workdir}"
  fi

  say "Cloning repository ${repo}..."
  if ! git clone ${repo} ${workdir}/xii >/dev/null 2>&1; then
    fail "Could not clone ${repo}..."
  fi
}

function git_has_tag() {
  local repo_path=$1
  local tag_name=$2

  if GIT_DIR=${repo_path} git rev-parse ${tag_name} >/dev/null 2>&1; then
    return 0
  fi
  return 1
}

function git_has_branch() {
  local repo_path=$1
  local branch_name=$2

  if GIT_DIR=${repo_path}/.git git branch --list $branch_name > /dev/null 2>&1; then
    return 0
  fi
  return 1
}

function git_checkout() {
  local repo_path=$1
  local branch_name=$2

  if ! git_has_branch ${repo_path} ${branch_name}; then
    fail "Invalid branch name: ${branch_name}"
  fi

  if ! GIT_DIR=${repo_path}/.git git checkout ${branch_name} > /dev/null 2>&1; then
    fail "Could not checkout ${branch_name}"
  fi
}

function git_get_tags() {
  local repo_path=$1

  tags=$(GIT_DIR=${repo_path}/.git git tag --sort="version:refname")
  echo $tags
}

# tempdir --------------------------------------------------------------------

function tempdir_new() {
  if [ -d /tmp/xii-docs ]; then
    rm -rf /tmp/xii-docs > /dev/null 2>&1
  fi
  mkdir -p /tmp/xii-docs/build
  mkdir -p /tmp/xii-docs/generated
  echo "/tmp/xii-docs"
}

# vvvvvvvvvvvvvvvvvvvvvvvvvvvv real main vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

function main() {
  local action=$1
  shift
  local tagbranch=$@

  workdir=$(tempdir_new)
  sphinxdir=${SELF}/sphinx
  builddir=${workdir}/build
  repodir=${workdir}/xii

  git_clone ${workdir} ${XII_REPO}

  checkouts="master"

  for checkout in "${checkouts[@]}"; do
    rm -rf ${builddir}
    copy ${sphinxdir} ${builddir}

    git_checkout ${repodir} ${checkout}

    builder ${repodir}/src ${builddir}

    say "Generating html docs for ${checkout}..."
    pushd ${builddir} > /dev/null
    make html
    popd > /dev/null
    copy ${builddir}/_build/html ${workdir}/generated/${checkout}
  done
}
main $@
